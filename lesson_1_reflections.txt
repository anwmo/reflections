How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    When you view code side by side, your eye is much
	more easily drawn to the differences between the two!

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy to go back to old versions if something isn't working right.
	Learn from old mistakes (and remind self why they happened)
	Understand WHO made what changes

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Cons: Can be easy to forget to commit. Puts the onus on developer to decide when/how big
	Pros: commits are likely to be "right size" -- not too complex, or too small, commits will "make sense" for others

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Code tends to be linked to multiple documents. Also, Google can use hyperlinks.
	
How can you use the commands git log and git diff to view the history of files?

    Git Log will show the history of all the logs (date, time, author, notes)
	Git diff will show actual changes/differences between two files

How might using version control make you more confident to make changes that
could break something?

    You can make multiple complex changes, but still know a) its super easy to go back to where you were
	and b) you can easily find the actual changes you made vs. old version

Now that you have your workspace set up, what do you want to try using Git for?

   A PROJECT!!!